#include <Wire.h>
#include "MAX30105.h"
#include "heartRate.h"

#include <OneWire.h>
#include <DallasTemperature.h>

#include <LiquidCrystal_I2C.h>

#define ONE_WIRE_BUS 2
#define BUZZER_PIN 3

MAX30105 particleSensor;
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);
LiquidCrystal_I2C lcd(0x27, 16, 2);

long lastBeat = 0;
float beatsPerMinute = 0;
int beatCount = 0;
int bpmSum = 0;
int bpmAvg = 0;
long irValue = 0;

float temperature = 0;
unsigned long lastTempRead = 0;
const unsigned long tempInterval = 1000;

unsigned long lastDisplayUpdate = 0;
const unsigned long displayInterval = 200;
bool showingHeartRate = false;

bool fingerDetected = false;
bool fingerPreviouslyDetected = false;

void setup() {
  Serial.begin(9600);
  Wire.begin();
  delay(100);

  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Initializing...");

  sensors.begin();

  pinMode(BUZZER_PIN, OUTPUT);
  digitalWrite(BUZZER_PIN, LOW);

  if (!particleSensor.begin(Wire, I2C_SPEED_STANDARD)) {
    Serial.println("MAX30105 tidak ditemukan");
    lcd.setCursor(0, 1);
    lcd.print("Sensor gagal!");
    while (1);
  }

  // Setting sensor dengan sample rate & brightness optimal
  particleSensor.setup(0x3F, 4, 2, 400, 411, 16384);
  particleSensor.setPulseAmplitudeRed(0x3F);
  particleSensor.setPulseAmplitudeGreen(0);

  lcd.clear();
}

void loop() {
  irValue = particleSensor.getIR();

  // Debug output nilai IR ke Serial Monitor
  Serial.print("IR Value: ");
  Serial.println(irValue);

  unsigned long now = millis();

  // Turunkan threshold dari 50000 ke 30000 untuk deteksi jari
  fingerDetected = (irValue > 30000);

  // Jika status jari berubah dari tidak terdeteksi ke terdeteksi, reset data BPM
  if (fingerDetected && !fingerPreviouslyDetected) {
    Serial.println("Jari terdeteksi, reset data BPM");
    bpmSum = 0;
    beatCount = 0;
    bpmAvg = 0;
    showingHeartRate = false;
  }

  fingerPreviouslyDetected = fingerDetected;

  if (fingerDetected) {
    if (checkForBeat(irValue)) {
      long delta = now - lastBeat;
      lastBeat = now;

      if (delta > 300 && delta < 1200) {
        beatsPerMinute = 60 / (delta / 1000.0);

        if (beatsPerMinute >= 40 && beatsPerMinute <= 180) {
          bpmSum += beatsPerMinute;
          beatCount++;
          bpmAvg = bpmSum / beatCount;

          Serial.print("BPM: ");
          Serial.println(beatsPerMinute);

          tone(BUZZER_PIN, 1000, 50);

          if (now - lastDisplayUpdate >= 100 || !showingHeartRate) {
            showHeartRate(beatsPerMinute, bpmAvg);
            lastDisplayUpdate = now;
            showingHeartRate = true;
          }
        }
      }
    }
  } else {
    if (fingerPreviouslyDetected) {
      Serial.println("Jari dilepas");
    }

    fingerPreviouslyDetected = false;
    noTone(BUZZER_PIN);

    if (now - lastTempRead >= tempInterval) {
      lastTempRead = now;
      sensors.requestTemperatures();
      float tempC = sensors.getTempCByIndex(0);

      if (tempC > -55 && tempC < 85) {
        temperature = tempC;
        Serial.print("Temperature: ");
        Serial.println(temperature);

        bpmSum = 0;
        beatCount = 0;
        bpmAvg = 0;
        showingHeartRate = false;

        showTemperature(temperature);
      } else {
        Serial.println("Gagal membaca suhu!");
      }
    }
  }

  delay(5);
}

void showHeartRate(float bpm, int avg) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("HR: ");
  lcd.print(bpm, 0);
  lcd.print(" BPM");

  lcd.setCursor(0, 1);
  lcd.print("Avg: ");
  lcd.print(avg);
}

void showTemperature(float tempC) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Suhu: ");
  lcd.print(tempC, 1);
  lcd.print(" C");

  lcd.setCursor(0, 1);
  lcd.print("Tunggu jari...");
}
