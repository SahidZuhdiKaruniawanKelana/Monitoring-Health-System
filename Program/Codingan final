#include <Wire.h>
#include "MAX30105.h"
#include "heartRate.h"
#include <OneWire.h>
#include <DallasTemperature.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Pin dan alamat
#define ONE_WIRE_BUS 2
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C

MAX30105 particleSensor;
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Data detak jantung
long irValue;
float beatsPerMinute = 0;
int beatAvg = 0;
byte rates[8];
byte rateSpot = 0;
long lastBeat = 0;

// Data suhu
float temperature = 0;

// Waktu
unsigned long lastTempRead = 0;
const unsigned long tempInterval = 500; // suhu dibaca tiap 500ms

void setup() {
  Serial.begin(9600);
  Wire.begin();
  Wire.setClock(100000);

  // OLED
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("OLED failed"));
    while (1);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("Initializing...");
  display.display();

  // Sensor suhu
  sensors.begin();

  // Sensor detak jantung
  if (!particleSensor.begin(Wire, I2C_SPEED_STANDARD)) {
    Serial.println("MAX30105 not found");
    display.clearDisplay();
    display.setCursor(0, 0);
    display.println("MAX30105 not found!");
    display.display();
    while (1);
  }

  particleSensor.setup(); // default config
  particleSensor.setPulseAmplitudeRed(0x5F);
  particleSensor.setPulseAmplitudeGreen(0); // off green LED

  // Init BPM array
  for (int i = 0; i < 8; i++) rates[i] = 0;

  display.clearDisplay();
  display.setCursor(0, 0);
  display.println("Ready!");
  display.display();
  delay(1000);
}

void loop() {
  irValue = particleSensor.getIR();
  bool fingerDetected = irValue > 50000;

  // Jika jari terdeteksi, proses BPM dan nonaktifkan suhu
  if (fingerDetected) {
    if (checkForBeat(irValue)) {
      long delta = millis() - lastBeat;
      lastBeat = millis();

      float bpm = 60.0 / (delta / 1000.0);

      if (bpm >= 50 && bpm <= 160) { // filter BPM wajar
        rates[rateSpot++] = (byte)bpm;
        rateSpot %= 8;

        int sum = 0;
        for (byte i = 0; i < 8; i++) sum += rates[i];
        beatAvg = sum / 8;
        beatsPerMinute = beatAvg;
      }
    }
  } else {
    // Jika tidak ada jari, aktifkan sensor suhu setiap interval
    if (millis() - lastTempRead >= tempInterval) {
      lastTempRead = millis();
      sensors.requestTemperatures();
      float newTemp = sensors.getTempCByIndex(0);
      temperature = 0.8 * temperature + 0.2 * newTemp;  // smoothing
      Serial.print("Temp: ");
      Serial.print(temperature, 1);
      Serial.println(" C");
    }
  }

  updateDisplay(fingerDetected);
  delay(10);
}

void updateDisplay(bool fingerOnSensor) {
  display.clearDisplay();

  if (fingerOnSensor) {
    display.setCursor(0, 0);
    display.print("IR: ");
    display.println(irValue);

    display.setCursor(0, 10);
    display.print("BPM: ");
    display.println(beatsPerMinute, 1);

    display.setCursor(64, 10);
    display.print("Avg: ");
    display.println(beatAvg);
  } else {
    display.setCursor(0, 0);
    display.println("Place finger...");

    display.setCursor(0, 10);
    display.print("Temp: ");
    display.print(temperature, 1);
    display.println(" C");
  }

  display.display();
}
